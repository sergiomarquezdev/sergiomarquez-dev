---
interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = new URL("/og-image.svg", Astro.site);
---

<meta charset="UTF-8" />
<meta name="description" content={description} />
<meta name="viewport" content="width=device-width" />
<meta name="robots" content="index, follow" />
<meta name="author" content="Sergio M√°rquez P√©rez" />
<link rel="icon" type="image/svg+xml" href="/favicon.ico" />
<meta name="generator" content={Astro.generator} />
<link rel="canonical" href={canonicalURL} />

<!-- Google AdSense Verification -->
<meta name="google-adsense-account" content="ca-pub-7569719493920591" />

<title>{title}</title>

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={socialImageURL} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:locale" content="en_US" />
<meta property="og:site_name" content="Sergio M√°rquez P√©rez" />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={socialImageURL} />
<meta property="twitter:creator" content="@sergiomzdev" />

<!-- Structured Data -->
<script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "Person",
    "name": "Sergio M√°rquez P√©rez",
    "jobTitle": "AI/ML & Backend Developer",
    "description": "Automation and AI/ML developer passionate about building modern web applications and sharing knowledge",
    "url": "https://sergiomarquez.dev",
    "sameAs": [
      "https://github.com/sergiomarquezdev",
      "https://linkedin.com/in/sergio-marquez-perez/",
      "https://x.com/sergiomzdev",
      "https://www.youtube.com/@sergiomarquezdev"
    ],
    "knowsAbout": [
      "Artificial Intelligence",
      "Machine Learning",
      "Backend Development",
      "Automation",
      "Python",
      "TypeScript"
    ],
    "alumniOf": {
      "@type": "EducationalOrganization",
      "name": "AI/ML & Backend Development"
    }
  }
</script>

<!-- Google Funding Choices (CMP) Script -->
<script async src="https://fundingchoicesmessages.google.com/i/pub-7569719493920591?ers=1"></script>
<script is:inline>
	(function() {
		function signalGooglefcPresent() {
			if (!window.frames['googlefcPresent']) {
				if (document.body) {
					const iframe = document.createElement('iframe');
					iframe.style = 'width: 0; height: 0; border: none; z-index: -1000; left: -1000px; top: -1000px;';
					iframe.style.display = 'none';
					iframe.name = 'googlefcPresent';
					document.body.appendChild(iframe);
				} else {
					setTimeout(signalGooglefcPresent, 0);
				}
			}
		}
		signalGooglefcPresent();
	})();
</script>

<!-- Google CMP Integration + Analytics (GDPR Compliant) -->
<script is:inline>
	// Google CMP Integration for GDPR Compliance
	window.googlefc = window.googlefc || {};
	window.googlefc.callbackQueue = window.googlefc.callbackQueue || [];

	// Function to load Google Analytics only with consent
	window.loadGoogleAnalyticsWithConsent = function() {
		console.log('üìä Loading Google Analytics with consent...');

		// Load gtag script ONLY with consent
		const gtagScript = document.createElement('script');
		gtagScript.async = true;
		gtagScript.src = 'https://www.googletagmanager.com/gtag/js?id=G-ZKQQ4ZXLKH';
		document.head.appendChild(gtagScript);

		// Initialize gtag with GDPR compliance
		window.dataLayer = window.dataLayer || [];
		function gtag() { window.dataLayer.push(arguments); }
		window.gtag = gtag;

		gtag('js', new Date());
		gtag('config', 'G-ZKQQ4ZXLKH', {
			page_title: document.title,
			page_location: window.location.href,
			anonymize_ip: true, // GDPR compliance
		});

		console.log('‚úÖ Google Analytics loaded with user consent');
		window.analyticsEnabled = true;
	};

	// Listen for Google CMP consent decisions
	window.googlefc.callbackQueue.push({
		'CONSENT_MODE_DATA_READY': () => {
			console.log('üîç Google CMP consent data ready');
			const googleConsent = window.googlefc.getGoogleConsentModeValues();

			// Load Analytics ONLY if user consented
			if (googleConsent.analyticsStoragePurposeConsentStatus === 1) { // GRANTED
				window.loadGoogleAnalyticsWithConsent();

				// Sync with our ConsentManager if exists
				if (window.consentManager) {
					window.consentManager.syncFromExternalCMP({
						analytics: true,
						advertising: googleConsent.adStoragePurposeConsentStatus === 1
					});
				}
			} else {
				console.log('üö´ Analytics disabled - user did not consent');

				// Sync rejection with our ConsentManager if exists
				if (window.consentManager) {
					window.consentManager.syncFromExternalCMP({
						analytics: false,
						advertising: googleConsent.adStoragePurposeConsentStatus === 1
					});
				}
			}
		}
	});
</script>
